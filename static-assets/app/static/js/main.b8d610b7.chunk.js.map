{"version":3,"sources":["app/graphql/carousel-query.js","app/components/Carousel.js","app/configuration.js","app/graphql/featured-section-query.js","app/components/FeaturedSection.js","app/pages/Home.js","app/pages/Gallery.js","app/components/Header.js","app/components/BaseLayout.js","App.js","serviceWorker.js","index.js"],"names":["CAROUSEL_QUERY","gql","Carousel","items","baseImagesURL","fade","className","map","objectId","title_s","subtitle_s","mainImage_s","Item","key","src","alt","Caption","defaultProps","configurationElement","document","querySelector","configurationString","innerText","JSON","parse","FEATURED_SECTION_QUERY","FeaturedSection","data","featuredItems_o","item","featuredItem","index","featuredImage_s","caption_s","href","buttonLink_s","buttonLabel_s","Home","baseCrafterURL","configuration","carouselData","useQuery","loading","error","component_carouselitem","useFetchCarousel","featureSectionData","component_featuredsection","length","useFetchFeaturedSection","Gallery","isActive","isCurrent","Header","Navbar","bg","variant","expand","sticky","Brand","Toggle","aria-controls","Collapse","id","Nav","to","getProps","classes","baseLayoutContent","margin","maxWidth","BaseLayout","children","style","client","ApolloClient","uri","crafterGraphQlURL","App","path","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b8d610b7.chunk.js","sourcesContent":["/* eslint-disable camelcase */\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const CAROUSEL_QUERY = gql`\n  {\n    component_carouselitem {\n      total\n      items {\n        objectId\n        title_s\n        subtitle_s\n        mainImage_s\n      }\n    }\n  }\n`;\n\nexport const useFetchCarousel = () => {\n  const { loading, error, data } = useQuery(CAROUSEL_QUERY);\n  return {\n    loading,\n    error,\n    data: {\n      ...data && {\n        ...data.component_carouselitem,\n        items: data.component_carouselitem.items,\n      },\n    },\n  };\n};\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BootstrapCarousel from 'react-bootstrap/Carousel';\n\nconst Carousel = ({ items, baseImagesURL, fade }) => (\n  <div className=\"py-5\">\n    <BootstrapCarousel fade={fade}>\n      {items.map(({\n        objectId, title_s, subtitle_s, mainImage_s,\n      }) => (\n        <BootstrapCarousel.Item key={objectId}>\n          <img\n            className=\"d-block w-100\"\n            src={`${baseImagesURL}${mainImage_s}`}\n            alt={title_s}\n          />\n          <BootstrapCarousel.Caption>\n            <h3>{title_s}</h3>\n            <p>{subtitle_s}</p>\n          </BootstrapCarousel.Caption>\n        </BootstrapCarousel.Item>\n      ))}\n    </BootstrapCarousel>\n  </div>\n);\n\nCarousel.propTypes = {\n  items: PropTypes.instanceOf(Array),\n  baseImagesURL: PropTypes.string,\n  fade: PropTypes.bool,\n};\n\nCarousel.defaultProps = {\n  items: [],\n  baseImagesURL: '',\n  fade: false,\n};\n\nexport default Carousel;\n","const configurationElement = document.querySelector('script#configuration');\n\nconst configurationString = configurationElement ? configurationElement.innerText : null;\n\nexport default {\n  ...(configurationString ? JSON.parse(configurationString) : {}),\n};\n","import { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\n\nexport const FEATURED_SECTION_QUERY = gql`\n  {\n    component_featuredsection {\n      total\n      items {\n        objectId\n        title_s\n        featuredItems_o {\n          item {\n            title_s\n            caption_s\n            featuredImage_s\n            buttonLink_s\n            buttonLabel_s\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const useFetchFeaturedSection = () => {\n  const { loading, error, data } = useQuery(FEATURED_SECTION_QUERY);\n  return {\n    loading,\n    error,\n    data: {\n      ...data && {\n        item: data.component_featuredsection.items.length\n          && data.component_featuredsection.items[0],\n      },\n    },\n  };\n};\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeaturedSection = ({ data: { title_s, featuredItems_o }, baseImagesURL }) => (\n  <>\n    <div className=\"container py-5\">\n      <h2 className=\"text-center\">{title_s}</h2>\n      <div className=\"row py-2\">\n        {featuredItems_o.item && featuredItems_o.item.map((featuredItem, index) => (\n          <div className=\"col-md-4\" key={index}>\n            <div className=\"card text-center\">\n              <img\n                className=\"card-img-top d-block w-100\"\n                src={`${baseImagesURL}${featuredItem.featuredImage_s}`}\n                alt={title_s}\n              />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{featuredItem.title_s}</h5>\n                <p className=\"card-text\">{featuredItem.caption_s}</p>\n                <a href={featuredItem.buttonLink_s} className=\"btn btn-primary\">{featuredItem.buttonLabel_s}</a>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  </>\n);\n\nFeaturedSection.propTypes = {\n  data: PropTypes.instanceOf(Object).isRequired,\n  baseImagesURL: PropTypes.string,\n};\n\nFeaturedSection.defaultProps = {\n  baseImagesURL: '',\n};\n\nexport default FeaturedSection;\n","import React from 'react';\nimport { useFetchCarousel } from 'app/graphql/carousel-query';\nimport Carousel from 'app/components/Carousel';\nimport configuration from 'app/configuration';\nimport { useFetchFeaturedSection } from 'app/graphql/featured-section-query';\nimport FeaturedSection from '../components/FeaturedSection';\n\n\nconst Home = () => {\n  const { baseCrafterURL } = configuration;\n  const { data: carouselData } = useFetchCarousel();\n  const { data: featureSectionData } = useFetchFeaturedSection();\n  return (\n    <div>\n      <Carousel items={carouselData.items} baseImagesURL={baseCrafterURL} fade />\n      {featureSectionData.item\n        && <FeaturedSection data={featureSectionData.item} baseImagesURL={baseCrafterURL} />}\n    </div>\n  );\n};\n\nHome.propTypes = {\n\n};\n\nexport default Home;\n","import React from 'react';\n\nconst Gallery = () => (\n  <h1>Gallery</h1>\n);\n\nGallery.propTypes = {\n\n};\n\nexport default Gallery;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Nav } from 'react-bootstrap';\nimport { Link } from '@reach/router';\n\nconst isActive = ({ isCurrent }) => (isCurrent ? { className: 'nav-link active' } : null);\n\nconst Header = () => (\n  <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\n    <Navbar.Brand href=\"#home\">G-Place</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <Link className=\"nav-link\" to=\"/\" getProps={isActive}>Home</Link>\n        <Link className=\"nav-link\" to=\"/gallery\" getProps={isActive}>Gallery</Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n);\n\nexport default Header;\n","import React from 'react';\nimport Header from 'app/components/Header';\n\nconst classes = {\n  baseLayoutContent: {\n    margin: '0 auto',\n    maxWidth: '1200px',\n  },\n};\n\nconst BaseLayout = ({ children }) => (\n  <>\n    <Header />\n    <div style={classes.baseLayoutContent}>\n      {children}\n    </div>\n  </>\n);\n\nexport default BaseLayout;\n","import React from 'react';\nimport { Router } from '@reach/router';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nimport Home from 'app/pages/Home';\nimport Gallery from 'app/pages/Gallery';\nimport configuration from 'app/configuration';\nimport BaseLayout from 'app/components/BaseLayout';\n\nconst client = new ApolloClient({\n  uri: configuration.crafterGraphQlURL,\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <BaseLayout path=\"/\">\n          <Home path=\"/\" />\n          <Gallery path=\"/gallery\" />\n        </BaseLayout>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/* eslint-disable comma-dangle */\n/* eslint-disable operator-linebreak */\n/* eslint-disable no-use-before-define */\n/* eslint-disable no-param-reassign */\n/* eslint-disable arrow-parens */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}